/* ====================================================================
 * The Apache Software License, Version 1.1
 *
 * Copyright (c) 2000 The Apache Software Foundation.  All rights
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Apache" and "Apache Software Foundation" must
 *    not be used to endorse or promote products derived from this
 *    software without prior written permission. For written
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache",
 *    nor may "Apache" appear in their name, without prior written
 *    permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation.  For more
 * information on the Apache Software Foundation, please see
 * <http://www.apache.org/>.
 */

/* 
 * Note: This is a Windows specific version of apr.h. It is renamed to
 * apr.h at the start of a Windows build.
 */

#ifdef WIN32
#ifndef APR_H
#define APR_H

/* Has windows.h already been included?  If so, our preferences don't matter,
 * but we will still need the winsock things no matter what was included.
 * If not, include a restricted set of windows headers to our tastes.
 */
#ifndef _WINDOWS_
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
#ifndef _WIN32_WINNT

/* Restrict the server to a subset of Windows NT 4.0 header files by default
 */
#define _WIN32_WINNT 0x0400
#endif
#ifndef NOUSER
#define NOUSER
#endif
#ifndef NOGDI
#define NOGDI
#endif
#ifndef NONLS
#define NONLS
#endif
#ifndef NOMCX
#define NOMCX
#endif
#ifndef NOIME
#define NOIME
#endif
#include <windows.h>
/* 
 * Add a _very_few_ declarations missing from the restricted set of headers
 * (If this list becomes extensive, re-enable the required headers above!)
 * winsock headers were excluded by WIN32_LEAN_AND_MEAN, so include them now
 */
#define SW_HIDE             0
#include <winsock2.h>
#include <mswsock.h>
#endif /* !_WINDOWS_ */

#include <sys/types.h>
#include <stddef.h>
#include <stdio.h>
#include <time.h>
#include <process.h>
#include <signal.h>
#include <stdlib.h>

#define ap_inline
#define __attribute__(__x)
#define ENUM_BITFIELD(e,n,w)  signed int n : w

#define APR_HAVE_ERRNO_H        1
#define APR_HAVE_DIRENT_H       0
#define APR_HAVE_FCNTL_H        0
#define APR_HAVE_NETINET_IN_H   0
#define APR_HAVE_PTHREAD_H      0
#define APR_HAVE_STDARG_H       1
#define APR_HAVE_STDIO_H        1
#define APR_HAVE_SYS_TYPES_H    1
#define APR_HAVE_SYS_UIO_H      0
#define APR_HAVE_IN_ADDR        1
#define APR_HAVE_INET_ADDR	1

#define APR_HAVE_MEMMOVE        1
#define APR_HAVE_STRCASECMP     0
#define APR_HAVE_STRICMP        1
#define APR_HAVE_STRNCASECMP    0
#define APR_HAVE_STRNICMP       1
#define APR_HAVE_STRDUP         1
#define APR_HAVE_STRSTR         1

#define APR_USE_FLOCK_SERIALIZE           0 
#define APR_USE_SYSVSEM_SERIALIZE         0
#define APR_USE_FCNTL_SERIALIZE           0
#define APR_USE_PROC_PTHREAD_SERIALIZE    0 
#define APR_USE_PTHREAD_SERIALIZE         0 

#if APR_HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif

/*  APR Feature Macros */
#define APR_HAS_THREADS        1
#define APR_HAS_SENDFILE      1
#define APR_HAS_RANDOM         1
#define APR_HAS_DSO            1

#define APR_HAS_MMAP           0
#define APR_HAS_XLATE          0

/* Typedefs that APR needs. */

typedef  short           ap_int16_t;
typedef  unsigned short  ap_uint16_t;
                                               
typedef  int           ap_int32_t;
typedef  unsigned int  ap_uint32_t;
                                               
typedef  __int64           ap_int64_t;
typedef  unsigned __int64  ap_uint64_t;

typedef  int         ap_size_t;
typedef  int         ap_ssize_t;
typedef  _off_t      ap_off_t;
typedef  int         pid_t;
typedef  int         uid_t;
typedef  int         gid_t;

/* Definitions that APR programs need to work properly. */
#define APR_SSIZE_T_FMT          "d"
#define APR_THREAD_FUNC          __stdcall
#define APR_OFF_T_FMT            "ld"

/* Local machine definition for console and log output. */
#define APR_EOL_STR              "\r\n"

#if !defined(WIN32) || defined(APR_STATIC)
/* Default Non-WIN32 behavior removes all MSVCisms */
#define APR_EXPORT(type)         type
#define APR_EXPORT_NONSTD(type)  type
#define APR_VAR_EXPORT
#define APR_VAR_IMPORT           extern
#elif defined(APR_EXPORT_SYMBOLS)
#define APR_EXPORT(type)         __declspec(dllexport) type 
#define APR_EXPORT_NONSTD(type)  __declspec(dllexport) type 
#define APR_VAR_EXPORT           __declspec(dllexport)
#define APR_VAR_IMPORT           extern __declspec(dllexport)
#else
/* Default WIN32 behavior is to import the shared .dll */
#define APR_EXPORT(type)         __declspec(dllimport) type 
#define APR_EXPORT_NONSTD(type)  __declspec(dllimport) type 
#define APR_VAR_EXPORT           __declspec(dllimport)
#define APR_VAR_IMPORT           extern __declspec(dllimport)
#endif

#define ap_signal(a,b) signal(a,b)

typedef int ap_wait_t;

/* struct iovec is needed to emulate Unix writev */
struct iovec {
    char* iov_base;
    int   iov_len;
};
#endif /* APR_H */
#endif /* WIN32 */
