#CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
#LIBS=$(EXTRA_LIBS) $(LIBS1)
#INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
#LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)

CC=@CC@
RANLIB=@RANLIB@
CFLAGS=@CFLAGS@ @OPTIM@
LIBS=@LIBS@
LDFLAGS=@LDFLAGS@ $(LIBS)
INCDIR=../../include
OSDIR=$(INCDIR)/arch/@OSDIR@
DEFOSDIR=$(INCDIR)/arch/@DEFAULT_OSDIR@
INCLUDES=-I$(INCDIR) -I$(OSDIR) -I$(DEFOSDIR)

LIB=threadproc.a

OBJS=proc.o \
	thread.o \
	threadpriv.o \
	signals.o

.c.o:
	$(CC) $(CFLAGS) -c $(INCLUDES) $<

all: $(LIB)

clean:
	$(RM) -f *.o *.a *.so

distclean: clean
	-$(RM) -f Makefile


$(LIB): $(OBJS)
	$(RM) -f $@
	$(AR) cr $@ $(OBJS)
	$(RANLIB) $@

#
# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.in.  You have to re-run configure after
# using it.
#
depend:
	cp Makefile.in Makefile.in.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.in > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c | sed -e "s%\\\\\(.\)%/\\1%g" >> Makefile.new \
	    && sed -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' \
                   -e '1,$$s: $(DEFOSDIR)/: $$(DEFOSDIR)/:g' \
	           -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' Makefile.new \
		> Makefile.in \
	    && rm Makefile.new

# DO NOT REMOVE
proc.o: proc.c $(OSDIR)/threadproc.h \
 $(INCDIR)/apr_thread_proc.h $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/../network_io/os2/os2nerrno.h \
 $(INCDIR)/apr_time.h $(OSDIR)/fileio.h \
 $(INCDIR)/apr_private.h $(INCDIR)/apr_lock.h \
 $(INCDIR)/apr_lib.h $(INCDIR)/apr_pools.h \
 $(INCDIR)/apr_tables.h $(INCDIR)/apr_portable.h \
 $(INCDIR)/apr_network_io.h $(INCDIR)/apr_dso.h \
 $(INCDIR)/apr_strings.h
signals.o: signals.c $(OSDIR)/threadproc.h \
 $(INCDIR)/apr_thread_proc.h $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/../network_io/os2/os2nerrno.h \
 $(INCDIR)/apr_time.h $(OSDIR)/fileio.h \
 $(INCDIR)/apr_private.h $(INCDIR)/apr_lock.h
thread.o: thread.c $(OSDIR)/threadproc.h \
 $(INCDIR)/apr_thread_proc.h $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/../network_io/os2/os2nerrno.h \
 $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(INCDIR)/apr_pools.h $(INCDIR)/apr_tables.h \
 $(OSDIR)/fileio.h $(INCDIR)/apr_private.h \
 $(INCDIR)/apr_lock.h
threadcancel.o: threadcancel.c $(OSDIR)/threadproc.h \
 $(INCDIR)/apr_thread_proc.h $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/../network_io/os2/os2nerrno.h \
 $(INCDIR)/apr_time.h $(OSDIR)/fileio.h \
 $(INCDIR)/apr_private.h $(INCDIR)/apr_lock.h
threadpriv.o: threadpriv.c $(OSDIR)/threadproc.h \
 $(INCDIR)/apr_thread_proc.h $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/../network_io/os2/os2nerrno.h \
 $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(INCDIR)/apr_pools.h $(INCDIR)/apr_tables.h \
 $(OSDIR)/fileio.h $(INCDIR)/apr_private.h \
 $(INCDIR)/apr_lock.h
