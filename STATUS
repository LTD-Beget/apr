APACHE PORTABLE RUNTIME (APR) LIBRARY STATUS:			-*-text-*-
Last modified at [$Date: 2001/01/13 04:23:10 $]

Release:

    2.0a9   : released ...
    2.0a8   : released November 20, 2000
    2.0a7   : released October 8, 2000
    2.0a6   : released August 18, 2000
    2.0a5   : released August 4, 2000
    2.0a4   : released June 7, 2000
    2.0a3   : released April 28, 2000
    2.0a2   : released March 31, 2000
    2.0a1   : released March 10, 2000

RELEASE SHOWSTOPPERS:

    * This vote ends on Wednesday!
      Source code layout needs to be decided for apr and apr-util.  There
      has been some discussion about adding a src/ directory to apr or 
      removing it from apr-util/.  Either way, this needs to be decided.
      Those for adding apr/src/    : gstein
      Those removing apr-util/src/ : wrowe, rbb

    * Many linkage errors are gpfaulting Apache/win32 in various configs
      (load mod_dav, for example.)  Must complete the APR_DECLARES
        Gregory Nicholes is working on this, with quick response from rbb
        Will Rowe will fold over the libapr.dsp into it's own library
        and remove the exports from the simple apr.dsp once it's done.

    * Replace APR_GET_POOL macro with a typesafe mechanism to get the pool
      from an APR (incomplete) type.

RELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:

    * SysV semaphore support isn't usable by Apache when started as
      root because we don't have a way to allow the semaphore to be
      used by the configured User and Group.  Current work-around:
      change the initial permissions to 0666.  Needed code:  See
      1.3's http_main.c, SysV sem flavor of accept_mutex_init().

    * Build scripts do not recognise AIX 4.2.1 pthreads

    * Win32: Implement ap_shm_ functions 

    * Bill says we need a new procattr, APR_CREATE_SUSPENDED (or
      something similar) to direct ap_create_process to create the
      process suspended. We also need a call to wake up the suspended 
      process This may not be able to be implemented everywhere though.

    * Replace tables with a proper opaque ADT that has pluggable
      implementations (including something like the existing data type,
      plus hash tables for speed, with options for more later).
	Status: fanf is working on this.

    * add a version number to apr_initialize() as an extra failsafe against
      (APR) library version skew.
      MsgID: <Pine.LNX.4.10.10005231712380.31927-100000@nebula.lyra.org>
      Status: Greg +1 (volunteers), Jeff +1, Ryan +1, Tony -0(?)

    * The MM library is built as static and shared library. This should
      be set up to build only the required version.

    * add apr_crypt() and APR_HAS_CRYPT for apps to determine whether the
      crypt() function is available, and a way to call it (whether it is
      located in libc, libcrypt, or libufc)
        Status: Greg +1 (volunteers)

    * apr_dso_load() should (uniformly) add a cleanup to unload the DSO.
      Currently, the per-platform DSO loading is inconsistent in this
      regard.

    * apr_create_lock() changes:
      - It ignores the "type" parameter, so toss it.
      - The fname param is allowed to be NULL on the Unix platform.
        Change it to always use the passed value, and check callers.

    * configure.in does post-processing on the AC_OUTPUT files (for
      VPATH support). This means that config.status doesn't do the
      right thing when you re-run it. We ought to revamp the makefiles 
      to do the right AC_SUBST stuff rather than depend upon rewriting.

      Sascha: As the rewriter is a crude hack, I would not worry too
              much about it.  It is designed to go away once we have
              a proper build system in place.
              
              One of the perceived deficiencies of automake is that it
              uses AC_SUBST too often, thereby slowing down the task of
              generating Makefiles significantly, because it applies
              dozens of substitutions to each Makefile.  And why?  Make's
              built-in macro processing is much more powerful, and
              combined with the include facility, generating Makefiles
              becomes simpler and faster.

    * use os_(un)cork in network_io/unix/sendrecv.c for FreeBSD's
      sendfile implementation.

    * toss the per-Makefile setup of INCLUDES; shift to rules.mk.in


Documentation that needs writing:

    * API documentation
