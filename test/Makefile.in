# Generated automatically from Makefile.in by configure.
#CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
#LIBS=$(EXTRA_LIBS) $(LIBS1)
#INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
#LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)

RM=@RM@
CC=@CC@
RANLIB=@RANLIB@
CFLAGS=@CFLAGS@ @OPTIM@ 
LIBS=-L.. -lapr @LIBS@ 
LDFLAGS=@LDFLAGS@ $(LIBS)
INCDIR=../include
INCLUDES=-I$(INCDIR)

TARGETS= testfile@EXEEXT@ \
	testproc@EXEEXT@ \
	testsock@EXEEXT@ \
	testthread@EXEEXT@ \
	testtime@EXEEXT@ \
	testargs@EXEEXT@ \
	testcontext@EXEEXT@ \
	testmmap@EXEEXT@ \
	testshmem@EXEEXT@ \
	testpipe@EXEEXT@ \
	testdso@EXEEXT@ \
	testoc@EXEEXT@ \
	mod_test.so

OBJS= testfile.o \
	testproc.o \
	testsock.o \
	testthread.o \
	testtime.o \
        testargs.o \
        testcontext.o \
	testmmap.o \
	testdso.o \
	testoc.o \
	mod_test.o

.c.o:
	$(CC) -c $(CFLAGS) $(INCLUDES) $<

all: $(TARGETS) 

testfile@EXEEXT@: testfile.o
	$(CC) $(CFLAGS) testfile.o -o testfile@EXEEXT@ $(LDFLAGS) 

testdso@EXEEXT@: testdso.o
	$(CC) $(CFLAGS) --export-dynamic -fPIC testdso.o -o testdso@EXEEXT@ $(LDFLAGS) 

testoc@EXEEXT@: testoc.o
	$(CC) $(CFLAGS) testoc.o -o testoc@EXEEXT@ $(LDFLAGS) 

mod_test.so: mod_test.o
	$(CC) -shared mod_test.o -o mod_test.so 

testargs@EXEEXT@: testargs.o
	$(CC) $(CFLAGS) testargs.o -o testargs@EXEEXT@ $(LDFLAGS) 

testcontext@EXEEXT@: testcontext.o
	$(CC) $(CFLAGS) testcontext.o -o testcontext@EXEEXT@ $(LDFLAGS) 

testproc@EXEEXT@: testproc.o
	$(CC) $(CFLAGS) testproc.o -o testproc@EXEEXT@ $(LDFLAGS)

testthread@EXEEXT@: testthread.o
	$(CC) $(CFLAGS) testthread.o -o testthread@EXEEXT@ $(LDFLAGS)

testsock@EXEEXT@: testsock.o client.o server.o 
	$(CC) $(CFLAGS) testsock.o -o testsock@EXEEXT@  $(LDFLAGS)
	$(CC) $(CFLAGS) server.o -o server@EXEEXT@ $(LDFLAGS) 
	$(CC) $(CFLAGS) client.o -o client@EXEEXT@ $(LDFLAGS)

testtime@EXEEXT@: testtime.o
	$(CC) $(CFLAGS) testtime.o -o testtime@EXEEXT@ $(LDFLAGS)

testmmap@EXEEXT@: testmmap.o
	$(CC) $(CFLAGS) testmmap.o -o testmmap@EXEEXT@ $(LDFLAGS)

testshmem@EXEEXT@: testshmem.o
	$(CC) $(CFLAGS) testshmem.o -o testshmem@EXEEXT@ $(LDFLAGS)

testpipe@EXEEXT@: testpipe.o
	$(CC) $(CFLAGS) testpipe.o -o testpipe@EXEEXT@ $(LDFLAGS)

clean:
	$(RM) -f *.o *.a *.so $(TARGETS)

distclean: clean
	-$(RM) -f Makefile


#
# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.in.  You have to re-run configure after
# using it.
#
depend:
	cp Makefile.in Makefile.in.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.in > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && sed -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' \
	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
		> Makefile.in \
	    && rm Makefile.new

# DO NOT REMOVE
abc.o: abc.c $(INCDIR)/apr_file_io.h $(INCDIR)/apr_general.h \
 $(INCDIR)/apr.h $(INCDIR)/apr_errno.h $(INCDIR)/apr_time.h
client.o: client.c $(INCDIR)/apr_network_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h $(INCDIR)/apr_errno.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_time.h $(OSDIR)/usr/include/errno.h
mod_test.o: mod_test.c
server.o: server.c $(INCDIR)/apr_network_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h $(INCDIR)/apr_errno.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_time.h
testargs.o: testargs.c $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h $(INCDIR)/apr_errno.h \
 $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(INCDIR)/apr_thread_proc.h $(INCDIR)/apr_getopt.h
testcontext.o: testcontext.c $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h $(INCDIR)/apr_errno.h \
 $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(INCDIR)/apr_thread_proc.h
testdso.o: testdso.c $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/apr_pools.h $(INCDIR)/apr_lib.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_time.h \
 $(INCDIR)/apr_thread_proc.h $(INCDIR)/apr_dso.h
testfile.o: testfile.c $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h $(INCDIR)/apr_errno.h \
 $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(INCDIR)/apr_thread_proc.h
testmmap.o: testmmap.c $(INCDIR)/apr_mmap.h $(INCDIR)/apr_general.h \
 $(INCDIR)/apr.h $(INCDIR)/apr_errno.h $(INCDIR)/apr_network_io.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_time.h \
 $(INCDIR)/apr_portable.h $(INCDIR)/apr_thread_proc.h \
 $(INCDIR)/apr_lock.h $(INCDIR)/apr_lib.h
testoc.o: testoc.c $(INCDIR)/apr_thread_proc.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(OSDIR)/usr/include/errno.h
testpipe.o: testpipe.c $(INCDIR)/apr_file_io.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr.h $(INCDIR)/apr_errno.h \
 $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(INCDIR)/apr_thread_proc.h
testproc.o: testproc.c $(INCDIR)/apr_thread_proc.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h \
 $(OSDIR)/usr/include/errno.h
testshmem.o: testshmem.c $(INCDIR)/apr_shmem.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_general.h $(INCDIR)/apr_errno.h $(INCDIR)/apr_lock.h \
 $(INCDIR)/apr_lib.h $(INCDIR)/apr_file_io.h $(INCDIR)/apr_time.h \
 $(INCDIR)/apr_thread_proc.h $(OSDIR)/usr/include/errno.h
testsock.o: testsock.c $(INCDIR)/apr_thread_proc.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/apr_time.h $(INCDIR)/apr_lib.h
testthread.o: testthread.c $(INCDIR)/apr_thread_proc.h \
 $(INCDIR)/apr_file_io.h $(INCDIR)/apr_general.h $(INCDIR)/apr.h \
 $(INCDIR)/apr_errno.h $(INCDIR)/apr_time.h $(INCDIR)/apr_lock.h \
 $(OSDIR)/usr/include/errno.h
testtime.o: testtime.c $(INCDIR)/apr_time.h $(INCDIR)/apr_general.h \
 $(INCDIR)/apr.h $(INCDIR)/apr_errno.h $(OSDIR)/usr/include/errno.h
