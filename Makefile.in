#
# APR (Apache Portable Runtime) library Makefile.
#
SHELL=@SH@

#
# Macros for compilation commands
#
@SET_MAKE@
MFLAGS_STATIC=
RM=@RM@
CC=@CC@
AWK=@AWK@
CFLAGS=@CFLAGS@ @OPTIM@
LIBS=@LIBS@
LDFLAGS=@LDFLAGS@ $(LIBS)
AR=@AR@
RANLIB=@RANLIB@
#
# Macros for supporting directories
#
INCDIR=./include
INCDIR1=../include
INCLUDES=-I$(INCDIR) -I$(INCDIR1)

#
# Macros for target determination
#
MODULES=@MODULES@
SUBDIRS=@SUBDIRS@
#shmem/@OSDIR@

LIBAPR = @LIBPREFIX@apr.a

TARGET_EXPORTS = apr.exports

#
# Rules for turning inputs into outputs
#
.c.o:
	$(CC) $(CFLAGS) -c $(INCLUDES) $<

#
# Rules for building specific targets, starting with 'all' for
# building the entire package.
#
all: Makefile $(LIBAPR) delete-exports $(TARGET_EXPORTS)

$(LIBAPR): $(MODULES) subdirs
	@rm -rf objs
	@mkdir objs
	@rm -f $@
	for i in $(SUBDIRS); do cp $$i/*.o objs ; done;
	$(AR) cr $@ objs/*.o
	$(RANLIB) $@

clean: subdirs_clean
	$(RM) -f *.o *.a *.so objs/*.o apr.exports

depend: subdirs_depend

distclean: subdirs_distclean
	-$(RM) -f include/apr.h include/arch/unix/apr_private.h
	-$(RM) -f *.o *.a *.so
	-$(RM) -f config.cache config.status config.log
	-$(RM) -f Makefile
	-$(RM) -f APRVARS
	-$(RM) -rf objs
	cd test; $(MAKE) distclean; cd ..

extraclean: distclean
	-$(RM) -f configure include/arch/unix/apr_private.h.in

subdirs:
	@for i in $(SUBDIRS); do \
	    echo "===> $(SDP)lib/apr/$$i"; \
	    ( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' \
		CC='$(CC)' AUX_CFLAGS='$(AUX_CFLAGS)' RANLIB='$(RANLIB)' ) \
		|| exit 1; \
	    echo "<=== $(SDP)lib/apr/$$i"; \
	done;

subdirs_depend:
	@for i in $(SUBDIRS); do \
	    echo "===> $(SDP)lib/apr/$$i"; \
	    ( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' depend ) \
		|| exit 1; \
	    echo "<=== $(SDP)lib/apr/$$i"; \
	done;

subdirs_clean:
	@for i in $(SUBDIRS); do \
	    echo "===> $(SDP)lib/apr/$$i"; \
	    ( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' clean ) \
		|| exit 1; \
	    echo "<=== $(SDP)lib/apr/$$i"; \
	done;

subdirs_distclean:
	@for i in $(SUBDIRS); do \
	    echo "===> $(SDP)lib/apr/$$i"; \
	    ( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' distclean ) \
		|| exit 1; \
	    echo "<=== $(SDP)lib/apr/$$i"; \
	done;

install: all

delete-exports:
	@if test -f $(TARGET_EXPORTS); then \
	    headers="`find include/*.h -newer $(TARGET_EXPORTS)`" ; \
	    if test -n "$$headers"; then \
		echo Found newer headers. Will rebuild $(TARGET_EXPORTS). ; \
		echo $(RM) -f $(TARGET_EXPORTS) ; \
		$(RM) -f $(TARGET_EXPORTS) ; \
	    fi \
	fi

$(TARGET_EXPORTS):
	if test -z "$(srcdir)"; then \
		$(AWK) -f $(srcdir)helpers/make_export.awk include/*.h > $@ ; \
	else \
		$(AWK) -f $(srcdir)helpers/make_export.awk include/*.h $(srcdir)include/*.h > $@ ; \
	fi

docs:
	if test -z "$(srcdir)"; then \
		$(srcdir)helpers/scandoc -i$(srcdir)helpers/default.pl -p./docs/ ./include/*.h; \
	else \
		$(srcdir)helpers/scandoc -i$(srcdir)helpers/default.pl -p./docs/ ./include/*.h $(srcdir)include/*.h; \
	fi

test: $(LIBAPR)
	(cd test; make clean; make; \
	cd test; \
	for prog in `find . -type f -perm +u+x -name "test*" -print`; do \
	    ./$$prog; \
	    if [ $$? -eq 255 ]; then \
	        echo "$$prog failed"; \
	        break; \
	    fi \
	done )

# DO NOT REMOVE
docs: $(INCDIR)/*.h
