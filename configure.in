AC_CONFIG_AUX_DIR(./helpers)
OS=`./config.guess`
OS=`./config.sub $OS` 

# These added to allow default directories to be used...
DEFAULT_OSDIR="unix"
MODULES="file_io network_io threadproc misc locks time mmap" 

echo "Configuring APR library"
echo "Platform: ${OS}"
echo "(Default will be ${DEFAULT_OSDIR})"

dnl Process this file with autoconf to produce a configure script.
AC_INIT(configure.in)

AC_CONFIG_HEADER(include/apr_config.h)

AC_ARG_WITH(optim,[  --with-optim="FLAGS"      compiler optimisation flags],
	[OPTIM="$withval"])

# Most platforms use a prefix of 'lib' on their library files.
LIBPREFIX='lib'

dnl Checks for programs.
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_MAKE_SET
AC_CHECK_PROG(RM, rm, rm)
AC_CHECK_PROG(AR, ar, ar)

AC_ARG_WITH(debug,[  --with-debug              Turn on debugging and compile time warnings],
	[if test "$GCC" = "yes"; then CFLAGS="$CFLAGS -g -Wall"; else CFLAGS="$CFLAGS -g"; fi])

dnl # this is the place to put specific options for platform/compiler
dnl # combinations
case "$OS:$CC" in
    *-hp-hpux*:cc ) CFLAGS="$CFLAGS -Ae +DAportable" ;;
esac


# This macro needs to be here in case we are on an AIX box.
AC_AIX

dnl Checks for standard typedefs
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UID_T
AC_CHECK_TYPE(ssize_t, int)
AC_C_INLINE

dnl Checks for integer size
AC_CHECK_SIZEOF(char, 1)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(long double, 12)
AC_CHECK_SIZEOF(long long, 8)

AC_CHECK_SIZEOF_EXTENDED([#include <sys/types.h>], ssize_t, 8)

# Use /bin/sh if it exists, otherwise go looking for sh in the path
if test ".$SH" = . -a -f /bin/sh; then
  SH="/bin/sh"
fi
AC_CHECK_PROG(SH, sh, sh)

AC_CHECK_DEFINE(LOCK_EX, sys/file.h)
AC_CHECK_DEFINE(F_SETLK, fcntl.h)
AC_CHECK_DEFINE(PTHREAD_PROCESS_SHARED, pthread.h)

dnl Checks for libraries.
AC_BEGIN_DECISION([lock implementation method])
AC_IFALLYES(header:sys/file.h define:LOCK_EX,
            AC_DECIDE(USE_FLOCK_SERIALIZE, [4.2BSD-style flock()]))
AC_IFALLYES(header:sys/ipc.h header:sys/sem.h header:sys/file.h dnl
            func:semget func:semctl,
            AC_DECIDE(USE_SYSVSEM_SERIALIZE, [SysV IPC semget()]))
AC_IFALLYES(header:fcntl.h define:F_SETLK,
            AC_DECIDE(USE_FCNTL_SERIALIZE, [SVR4-style fcntl()]))
AC_IFALLYES(header:pthread.h define:PTHREAD_PROCESS_SHARED dnl
            custom:use_pthread_cross,
            AC_DECIDE(USE_PROC_PTHREAD_SERIALIZE, [pthread mutex]))
AC_DECISION_FORCE(USE_FCNTL_SERIALIZE)
AC_END_DECISION
AC_DEFINE_UNQUOTED($ac_decision) 

AC_CHECK_LIB(pthread, pthread_mutex_init, AC_DEFINE(USE_PTHREAD_SERIALIZE))
AC_CHECK_LIB(c_r, pthread_mutex_init, AC_DEFINE(USE_PTHREAD_SERIALIZE))
ac_cv_define_READDIR_IS_THREAD_SAFE=no
AC_CHECK_LIB(c_r, readdir, AC_DEFINE(READDIR_IS_THREAD_SAFE))


case "$OS" in
   *-os2*)
       CFLAGS="$CFLAGS -DOS2 -Zmt"
       OSDIR="os2"
       LIBPREFIX=""
       ;;
   *beos*)
       OSDIR="beos"
       CFLAGS="$CFLAGS -DBEOS"
       ;;
   *)
       OSDIR="unix"
       ;;
esac

AC_CHECK_LIB(dl, dlopen)
AC_CHECK_LIB(pthread, pthread_mutex_init)
AC_CHECK_LIB(c_r, pthread_mutex_init)
AC_CHECK_LIB(socket,socket)
AC_CHECK_LIB(crypt,crypt)
AC_CHECK_LIB(ufc,crypt)

if test ".$SYS_SW" = ".AIX"; then
    CFLAGS="$CFLAGS -U__STR__"
    case "$SYS_KV" in
	[12]*)
	    AC_DEFINE(USEBCOPY)
	    ;;
	3*)
	    AC_DEFINE(NEED_RLIM_T)
	    ;;
	41*)
	    AC_DEFINE(NEED_RLIM_T)
	    ;;
    esac
fi

dnl Checks for header files.
AC_HEADER_STDC

AC_CHECK_HEADERS(conio.h)
AC_CHECK_HEADERS(crypt.h)
AC_CHECK_HEADERS(ctype.h)
AC_CHECK_HEADERS(dir.h)
AC_CHECK_HEADERS(dirent.h)
AC_CHECK_HEADERS(errno.h)
AC_CHECK_HEADERS(net/errno.h)
AC_CHECK_HEADERS(fcntl.h)
AC_CHECK_HEADERS(features.h)
AC_CHECK_HEADERS(grp.h)
AC_CHECK_HEADERS(io.h)
AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(malloc.h)
AC_CHECK_HEADERS(math.h)
AC_CHECK_HEADERS(memory.h)
AC_CHECK_HEADERS(netdb.h)
AC_CHECK_HEADERS(osreldate.h)
AC_CHECK_HEADERS(process.h)
AC_CHECK_HEADERS(pwd.h)
AC_CHECK_HEADERS(setjmp.h)
AC_CHECK_HEADERS(signal.h)
AC_CHECK_HEADERS(stdarg.h)
AC_CHECK_HEADERS(stddef.h)
AC_CHECK_HEADERS(stdio.h)
AC_CHECK_HEADERS(stdlib.h)
AC_CHECK_HEADERS(string.h)
AC_CHECK_HEADERS(sysapi.h)
AC_CHECK_HEADERS(sysgtime.h)
AC_CHECK_HEADERS(termios.h)
AC_CHECK_HEADERS(time.h)
AC_CHECK_HEADERS(sys/time.h)
AC_CHECK_HEADERS(sys/times.h)
AC_CHECK_HEADERS(tpfeq.h)
AC_CHECK_HEADERS(tpfio.h)
AC_CHECK_HEADERS(sys/uio.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(poll.h)
AC_CHECK_HEADERS(unix.h)
AC_CHECK_HEADERS(winsock.h)

AC_CHECK_HEADERS(arpa/inet.h)
AC_CHECK_HEADERS(netinet/in.h)

AC_CHECK_HEADERS(sys/file.h)
AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/mman.h)
AC_CHECK_HEADERS(sys/param.h)
AC_CHECK_HEADERS(sys/resource.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(sys/signal.h)
AC_CHECK_HEADERS(sys/socket.h)
AC_CHECK_HEADERS(sys/stat.h)
AC_CHECK_HEADERS(sys/types.h)
AC_CHECK_HEADERS(sys/wait.h)

AC_CHECK_HEADERS(kernel/OS.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_FUNC_MMAP
AC_FUNC_SETPGRP

AC_MSG_CHECKING(looking for union semun in sys/sem.h)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/sem.h>
],[
union semun arg;
semctl(0, 0, 0, arg);
], AC_DEFINE(HAVE_STRUCT_UNION_SEMUN)
msg=yes,dnl
msg=no)
AC_MSG_RESULT([$msg])

dnl Checks for library functions.
AC_CHECK_FUNCS(pthread_sigmask)
AC_CHECK_FUNCS(strcasecmp stricmp poll setsid)
AC_CHECK_FUNCS(sigaction writev)
AC_CHECK_FUNCS(getpass)
AC_CHECK_FUNC(_getch)

AC_CHECK_FUNCS(gmtime_r localtime_r)

AC_MSG_CHECKING(whether to enable thread support)
AC_ARG_ENABLE(threads,
[  --enable-threads  Enable threading support in APR.],
[
  if test "$enableval" = "no"; then 
    AC_DEFINE(APR_HAS_THREADS, 0)
    AC_MSG_RESULT(no)
  else
    if test "$enableval" = "pthread"; then
      AC_CHECK_HEADERS(pthread.h, [ AC_DEFINE(APR_HAS_THREADS, 1) ], [ AC_DEFINE(APR_HAS_THREADS, 0) ] )
      AC_MSG_RESULT(yes)
    else
      AC_MSG_RESULT(no)
    fi
  fi
],
[
  AC_CHECK_HEADERS(pthread.h, [ AC_DEFINE(APR_HAS_THREADS, 1) ], [ AC_DEFINE(APR_HAS_THREADS, 0) ] )
   
]) 


dnl Start building stuff from our information
AC_SUBST(LDLIBS)
AC_SUBST(OPTIM)
AC_SUBST(RANLIB)
AC_SUBST(AR)
AC_SUBST(RM)
AC_SUBST(OSDIR)
AC_SUBST(DEFAULT_OSDIR)
AC_SUBST(LIBPREFIX)
AC_SUBST(EXEEXT)

MAKEFILE1="Makefile lib/Makefile "
SUBDIRS="lib "
for dir in $MODULES
do
    if test -f $dir/$OSDIR/Makefile.in; then
        MAKEFILE2="$MAKEFILE2 $dir/$OSDIR/Makefile "
        SUBDIRS="$SUBDIRS $dir/$OSDIR "
    else
        MAKEFILE2="$MAKEFILE2 $dir/$DEFAULT_OSDIR/Makefile "
        SUBDIRS="$SUBDIRS $dir/$DEFAULT_OSDIR "
    fi
done
MAKEFILE3="test/Makefile"
AC_SUBST(SUBDIRS)
AC_SUBST(MODULES)
AC_OUTPUT($MAKEFILE1 $MAKEFILE2 $MAKEFILE3)
